{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":[],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport L from './leaflet';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nconst panelDefaults = {\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'avg',\n  circleSize: 100\n};\n\nexport class WorldmapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-worldmap-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    const data = [];\n    this.setValues(data);\n    this.data = data;\n\n    if (!this.map) {\n      window.$.getJSON('public/plugins/grafana-worldmap-panel/countries.json').then(res => {\n        this.countries = res;\n        this.createMap();\n      });\n    }\n\n    this.render();\n  }\n\n  setValues(data) {\n    if (this.series && this.series.length > 0) {\n      this.series.forEach(serie => {\n        const lastPoint = _.last(serie.datapoints);\n        const lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (_.isString(lastValue)) {\n          data.push({countryCode: serie.alias, value: 0, valueFormatted: lastValue, valueRounded: 0});\n        } else {\n          const dataValue = {\n            countryCode: serie.alias,\n            value: serie.stats[this.panel.valueName],\n            flotpairs: serie.flotpairs,\n            valueFormatted: lastValue,\n            valueRounded: 0\n          };\n\n          dataValue.valueRounded = kbn.roundValue(dataValue.value, 0);\n          data.push(dataValue);\n        }\n      });\n    }\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  createMap() {\n    this.map = window.L.map('mapid_' + this.panel.id, {worldCopyJump: true, center: [this.panel.mapCenterLatitude, this.panel.mapCenterLongitude]})\n      .fitWorld()\n      .zoomIn(this.panel.initialZoom);\n\n    window.L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 18,\n      subdomains: 'abc',\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n    }).addTo(this.map);\n\n    this.drawCircles();\n  }\n\n  drawCircles() {\n    const circles = [];\n    this.data.forEach(dataPoint => {\n      const country = _.find(this.countries, (cou) => { return cou.country === dataPoint.countryCode; });\n      const circle = window.L.circle([country.latitude, country.longitude], dataPoint.value * this.panel.circleSize, {\n        color: 'red',\n        fillColor: '#f03',\n        fillOpacity: 0.5\n      });\n\n      circle.bindPopup(country.name + ': ' + dataPoint.valueRounded);\n      circles.push(circle);\n    }, this);\n    this.circles = window.L.layerGroup(circles).addTo(this.map);\n  }\n\n  setNewMapCenter() {\n    this.mapCenterMoved = true;\n    this.panToMapCenter();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([this.panel.mapCenterLatitude, this.panel.mapCenterLongitude]);\n  }\n\n  render() {\n    if (!this.data || !this.map || !this.circles) {\n      return;\n    }\n\n    if (this.mapCenterMoved) {\n      this.panToMapCenter();\n      this.mapCenterMoved = false;\n    }\n\n    if (this.circles.getLayers().length > 0) {\n      this.circles.clearLayers();\n    }\n    this.drawCircles();\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}