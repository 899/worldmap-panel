{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":[],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport L from './leaflet';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\n\nconst panelDefaults = {\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'avg',\n  circleSize: 100,\n  tileServers: {\n    'OpenStreetMap': {url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>', subdomains: 'abc'},\n    'Mapquest': {url: 'http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.png', attribution: 'Tiles by <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; ' +\n              'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\n              subdomains: '1234'},\n    'CartoDB Dark': {url: 'http://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', attribution: '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, &copy;<a href=\"http://cartodb.com/attributions#basemaps\">CartoDB</a>, CartoDB <a href=\"http://cartodb.com/attributions\" target=\"_blank\">attribution</a>', subdomains: '1234'}\n  },\n  tileServer: 'Mapquest',\n  locationData: 'countries'\n};\n\nexport class WorldmapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-worldmap-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    const data = [];\n    this.setValues(data);\n    this.data = data;\n\n    if (!this.map) {\n      window.$.getJSON('public/plugins/grafana-worldmap-panel/' + this.panel.locationData + '.json').then(res => {\n        this.locations = res;\n        this.createMap();\n      });\n    }\n\n    this.render();\n  }\n\n  setValues(data) {\n    if (this.series && this.series.length > 0) {\n      this.series.forEach(serie => {\n        const lastPoint = _.last(serie.datapoints);\n        const lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (_.isString(lastValue)) {\n          data.push({key: serie.alias, value: 0, valueFormatted: lastValue, valueRounded: 0});\n        } else {\n          const dataValue = {\n            key: serie.alias,\n            value: serie.stats[this.panel.valueName],\n            flotpairs: serie.flotpairs,\n            valueFormatted: lastValue,\n            valueRounded: 0\n          };\n\n          dataValue.valueRounded = kbn.roundValue(dataValue.value, 0);\n          data.push(dataValue);\n        }\n      });\n    }\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  createMap() {\n    this.map = window.L.map('mapid_' + this.panel.id, {worldCopyJump: true, center: [this.panel.mapCenterLatitude, this.panel.mapCenterLongitude]})\n      .fitWorld()\n      .zoomIn(this.panel.initialZoom);\n\n    const selectedTileServer = this.panel.tileServers[this.panel.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(this.map);\n\n    this.drawCircles();\n  }\n\n  drawCircles() {\n    const circles = [];\n    this.data.forEach(dataPoint => {\n      const location = _.find(this.locations, (loc) => { return loc.key === dataPoint.key; });\n\n      if (!location) return;\n\n      const circle = window.L.circleMarker([location.latitude, location.longitude], {\n        radius: Math.min(10, Math.max(1, (dataPoint.value || 0) * this.panel.circleSize)),\n        color: 'red',\n        fillColor: '#f03',\n        fillOpacity: 0.5\n      });\n\n      circle.bindPopup(location.name + ': ' + dataPoint.valueRounded);\n      circles.push(circle);\n    }, this);\n    this.circles = window.L.layerGroup(circles).addTo(this.map);\n  }\n\n  setNewMapCenter() {\n    this.mapCenterMoved = true;\n    this.panToMapCenter();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([this.panel.mapCenterLatitude, this.panel.mapCenterLongitude]);\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom);\n  }\n\n  resize() {\n    if (this.map) this.map.invalidateSize();\n  }\n\n  changeTileServer() {\n    this.map.remove();\n    this.createMap();\n    this.render();\n  }\n\n  changeLocationData() {\n    window.$.getJSON('public/plugins/grafana-worldmap-panel/' + this.panel.locationData + '.json').then(res => {\n      this.locations = res;\n      this.render();\n    });\n  }\n\n  render() {\n    if (!this.data || !this.map || !this.circles) {\n      return;\n    }\n\n    this.resize();\n\n    if (this.mapCenterMoved) {\n      this.panToMapCenter();\n      this.mapCenterMoved = false;\n    }\n\n    this.circles.eachLayer(layer => {\n      if (layer._container) this.circles.removeLayer(layer);\n    });\n    this.circles = [];\n    this.drawCircles();\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}