{"version":3,"sources":["../src/map_renderer.js"],"names":[],"mappings":"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","file":"map_renderer.js","sourcesContent":["import _ from 'lodash';\nimport L from './leaflet';\n\nexport default function link(scope, elem, attrs, ctrl) {\n  ctrl.events.on('render', () => {\n    render();\n    ctrl.renderingCompleted();\n  });\n\n  function render() {\n    if (!ctrl.data) return;\n\n    if (!ctrl.map) createMap();\n    resize();\n\n    if (ctrl.mapCenterMoved) panToMapCenter();\n\n    if (!ctrl.legend) createLegend();\n\n    drawCircles();\n  }\n\n  function createMap() {\n    ctrl.map = window.L.map('mapid_' + ctrl.panel.id, {worldCopyJump: true, center: [ctrl.panel.mapCenterLatitude, ctrl.panel.mapCenterLongitude]})\n      .fitWorld()\n      .zoomIn(ctrl.panel.initialZoom);\n\n    const selectedTileServer = ctrl.panel.tileServers[ctrl.panel.tileServer];\n    window.L.tileLayer(selectedTileServer.url, {\n      maxZoom: 18,\n      subdomains: selectedTileServer.subdomains,\n      reuseTiles: true,\n      detectRetina: true,\n      attribution: selectedTileServer.attribution\n    }).addTo(ctrl.map);\n\n    ctrl.circles = [];\n  }\n\n  function createLegend() {\n    ctrl.legend = window.L.control({position: 'bottomleft'});\n    ctrl.legend.onAdd = () => {\n      ctrl.legend._div = window.L.DomUtil.create('div', 'info legend');\n      ctrl.legend.update();\n      return ctrl.legend._div;\n    };\n\n    ctrl.legend.update = () => {\n      const thresholds = ctrl.data.thresholds;\n      let legendHtml = '';\n      legendHtml += '<i style=\"background:' + ctrl.panel.colors[0] + '\"></i> ' +\n          '&lt; ' + thresholds[0] + '<br>';\n      for (let index = 0; index < thresholds.length; index++) {\n        legendHtml +=\n          '<i style=\"background:' + getColor(thresholds[index] + 1) + '\"></i> ' +\n          thresholds[index] + (thresholds[index + 1] ? '&ndash;' + thresholds[index + 1] + '<br>' : '+');\n      }\n      ctrl.legend._div.innerHTML = legendHtml;\n    };\n\n    ctrl.legend.addTo(ctrl.map);\n  }\n\n  function getColor(value) {\n    for (let index = ctrl.data.thresholds.length; index > 0; index--) {\n      if (value >= ctrl.data.thresholds[index - 1]) {\n        return ctrl.panel.colors[index];\n      }\n    }\n    return _.first(ctrl.panel.colors);\n  }\n\n  function drawCircles() {\n    const circles = [];\n    ctrl.data.forEach(dataPoint => {\n      const location = _.find(ctrl.locations, (loc) => { return loc.key === dataPoint.key; });\n\n      if (!location) return;\n\n      let circle = _.find(ctrl.circles, cir => { return cir.options.location === location.key; });\n\n      if (circle) {\n        circle.setRadius(Math.min(30, Math.max(2, (dataPoint.value || 0) * ctrl.panel.circleSize)));\n        circle.setStyle({\n          color: getColor(dataPoint.value),\n          fillColor: getColor(dataPoint.value),\n          fillOpacity: 0.5,\n          location: location.key\n        });\n      } else {\n        circle = window.L.circleMarker([location.latitude, location.longitude], {\n          radius: Math.min(30, Math.max(2, (dataPoint.value || 0) * ctrl.panel.circleSize)),\n          color: getColor(dataPoint.value),\n          fillColor: getColor(dataPoint.value),\n          fillOpacity: 0.5,\n          location: location.key\n        });\n\n        if (dataPoint.value || dataPoint.value === 0) {\n          circle.bindPopup(location.name + ': ' + dataPoint.valueRounded);\n        } else {\n          circle.bindPopup(location.name + ': No data');\n        }\n\n        circles.push(circle);\n      }\n    });\n    window.L.layerGroup(circles).addTo(ctrl.map);\n    ctrl.circles = ctrl.circles.concat(circles);\n  }\n\n  function resize() {\n    if (ctrl.map) ctrl.map.invalidateSize();\n  }\n\n  function panToMapCenter() {\n    ctrl.map.panTo([ctrl.panel.mapCenterLatitude, ctrl.panel.mapCenterLongitude]);\n    ctrl.mapCenterMoved = false;\n  }\n}\n"]}